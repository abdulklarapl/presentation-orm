<?php

namespace AppBundle\Repository;
use JMS\Serializer\Serializer;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{
    const RESOURCES_QUERY_PATH = '/../Resources/query/';

    /**
     * @var Serializer
     */
    private $serializer;

    /**
     * @param Serializer $serializer
     */
    public function setSerializer($serializer)
    {
        $this->serializer = $serializer;
    }

    /**
     * @return Post[]
     */
    public function getAll()
    {
        $qb = $this->createQueryBuilder("post");
        $qb
            ->select("post, author, role, category, comments, commentsAuthor, commentsAuthorRole")
            ->join("post.category", "category")
            ->join("post.author", "author")
            ->join("author.role", "role")
            ->join("post.comments", "comments")
            ->join("comments.author", "commentsAuthor")
            ->join("commentsAuthor.role", "commentsAuthorRole");

        return $qb->getQuery()->getResult();
    }

    /**
     * @param bool $deserialize
     * @return Post[]|null
     * @throws \Doctrine\DBAL\DBALException
     */
    public function getAllInJson($deserialize = true)
    {
        $stmt = $this->getEntityManager()->getConnection()->prepare(file_get_contents(__DIR__.self::RESOURCES_QUERY_PATH.'get_all_posts_json.sql'));
        $stmt->execute();
        $result = $stmt->fetchAll();
        if ($deserialize) {
            if (!empty($result[0]['array_to_json'])) {
                return $this->serializer->deserialize($result[0]['array_to_json'], 'array<AppBundle\\Entity\\Post>', 'json');
            }
            return null;
        }
        return $result[0]['array_to_json'];
    }
}
